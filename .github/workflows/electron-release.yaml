name: Build and release electron

on: workflow_dispatch

jobs:
  release:
    runs-on: ${{ matrix.os }}
    environment: release
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Build (non-Mac)
        if: "!startsWith(matrix.os, 'macos')"
        run: yarn electron-pack
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build (Mac)
        if: startsWith(matrix.os, 'macos')
        run: |
          mkdir -p ~/.private_keys
          printf '%s' '${{ secrets.APPLE_API_KEY }}' > ~/.private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
          yarn electron-pack
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_API_KEY: ~/.private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
